"""sync schema of 0.14.2

Revision ID: d7999dfa4aae
Revises: 01d6889832f7
Create Date: 2024-12-24 15:19:12.090080

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "d7999dfa4aae"
down_revision = "01d6889832f7"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("tool_providers", schema=None) as batch_op:
        batch_op.drop_index("unique_tool_provider_tool_name")

    op.drop_table("tool_providers")
    with op.batch_alter_table("data_source_oauth_bindings", schema=None) as batch_op:
        if batch_op.get_bind().dialect.name == "postgresql":
            batch_op.create_index("source_info_idx", ["source_info"], unique=False, postgresql_using="gin")

    with op.batch_alter_table("datasets", schema=None) as batch_op:
        if batch_op.get_bind().dialect.name == "postgresql":
            batch_op.create_index("retrieval_model_idx", ["retrieval_model"], unique=False, postgresql_using="gin")

    with op.batch_alter_table("workflow_runs", schema=None) as batch_op:
        batch_op.add_column(sa.Column("exceptions_count", sa.Integer(), server_default=sa.text("0"), nullable=True))
        batch_op.alter_column("outputs", existing_type=sa.TEXT(), nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("workflow_runs", schema=None) as batch_op:
        batch_op.alter_column("outputs", existing_type=sa.TEXT(), nullable=False)
        batch_op.drop_column("exceptions_count")

    with op.batch_alter_table("datasets", schema=None) as batch_op:
        if batch_op.get_bind().dialect.name == "postgresql":
            batch_op.drop_index("retrieval_model_idx", postgresql_using="gin")

    with op.batch_alter_table("data_source_oauth_bindings", schema=None) as batch_op:
        if batch_op.get_bind().dialect.name == "postgresql":
            batch_op.drop_index("source_info_idx", postgresql_using="gin")

    op.create_table(
        "tool_providers",
        sa.Column("id", sa.CHAR(length=36), nullable=False),
        sa.Column("tenant_id", sa.CHAR(length=36), nullable=False),
        sa.Column("tool_name", sa.VARCHAR(length=40), nullable=False),
        sa.Column("encrypted_credentials", sa.TEXT(), nullable=True),
        sa.Column(
            "is_enabled",
            sa.Boolean(),
            server_default=sa.text("'0'"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("created_at", sa.DATETIME(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tenant_id", "tool_name", name="unique_tool_provider_tool_name"),
    )
    with op.batch_alter_table("tool_providers", schema=None) as batch_op:
        batch_op.create_index("unique_tool_provider_tool_name", ["tenant_id", "tool_name"], unique=True)

    # ### end Alembic commands ###
